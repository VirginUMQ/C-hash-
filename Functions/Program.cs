// ================================ Functions Функции ===========================================

// Создание функции:

// ============== ЕСЛИ ФУНКЦИЯ ВОЗВРАЩАЕТ ПЕРЕМЕННУЮ, ТО ТИП ДАННЫХ int
//  ТИП | ИМЯ | ПАРАМЕТРЫ (если несколько, то разделяются запятой/если отсутствуют, то просто "()")
//  int Square(int value) {
//  int result = value * value;
//  return result; // оператор, возвращающий переменную (можно вернуть только одну переменную)
//}

// ============== ЕСЛИ ФУНКЦИЯ НЕ ВОЗВРАЩАЕТ ПЕРЕМЕННУЮ, ТО ТИП ДАННЫХ void
//  ТИП |   ИМЯ    | ПАРАМЕТРЫ 
//  void ShowSquare(int value) {
//  int result = value * value;
//  Console.WriteLine("\n" + result);
//  return; // Может использоваться для завершения работы функции
//}

// =================================== ВИДЫ ФУНКЦИЙ (4) ========================================

// 1) БЕЗ ПАРАМЕТРОВ, БЕЗ ВОЗВРАЩАЕМОГО ЗНАЧЕНИЯ (void) (с побочным эффектом)
// 2) БЕЗ ПАРАМЕТРОВ, С ВОЗВРАЩАЕМЫМ ЗНАЧЕНИЕМ
// 3) С ПАРАМЕТРАМИ, БЕЗ ВОЗВРАЩАЕМОГО ЗНАЧЕНИЯ
// 4) С ПАРАМЕТРАМИ, С ВОЗВРАЩАЕМЫМ ЗНАЧЕНИЕМ

//===============================================================================================

// Создание функции:
double CalculateFormula(int a, int b, int c, int d)
{
double numenator = a * b;
int denumenator = c + d;
double res = numenator / denumenator; 
return res;
}

// Вызов функции и сохранение результата функции:


//-----------------------------------------------------------------------------------------------
double res = CalculateFormula(3, 5, 3, 2); // ПЕРЕДАЧА ПАРАМЕТРОВ ПО ЗНАЧЕНИЮ (для значимых типов данных: int / long / float / double / char / bool / ...)
                                          // [!] значение передаваемой переменной нельзя изменять [!]
Console.WriteLine("ПЕРЕДАЧА ПАРАМЕТРОВ В ФУНКЦИЮ ПО ЗНАЧЕНИЮ: " + res);
//-----------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------
//int[] array = {3, 5, 3, 2};
//res = CalculateFormula(array[]); // ПЕРЕДАЧА ПАРАМЕТРОВ ПО ССЫЛКЕ (например, для массива)
                                       // [!] элементы массива могут быть изменены [!]                                       
//Console.WriteLine("ПЕРЕДАЧА ПАРАМЕТРОВ В ФУНКЦИЮ ПО ССЫЛКЕ: " + res); ( НАПРИМЕР:)

Console.Write("ПЕРЕДАЧА ПАРАМЕТРОВ В ФУНКЦИЮ ПО ССЫЛКЕ (все четные числа в массиве изменены на \"0\": ");

void poSsilke(int[] arr)
{
for (int i = 0; i < arr.Length; i++){
    if (arr[i] % 2 == 0) { arr[i] = 0; }
}
}

void printPoSsilke(int[] arr)
{
foreach (int e in arr) {
    Console.Write(e + " "); 
}
}

int[] arr = {1, 2, 3, 4, 5, 6};
poSsilke(arr);
printPoSsilke(arr);
//-----------------------------------------------------------------------------------------------

//===============================================================================================



// =============================== ГЕНЕРАЦИЯ СЛУЧАЙНЫХ ЧИСЕЛ ==================================== 
// ТИП  ИМЯ   = ВЫДЕЛЕНИЕ ПАМЯТИ
Random random = new Random();
int rndNum = random.Next(1, 11); // 1, 11 = нижняя и верхняя границы. (верхняя в диапазон не включается)
Console.WriteLine("\nГенерация случайных чисел от 1 до 10: " + rndNum);


